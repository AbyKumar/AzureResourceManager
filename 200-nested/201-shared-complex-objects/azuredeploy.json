{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "optionalResource": {
      "type": "string",
      "defaultValue": "configured",
      "allowedValues": [
        "configured",
        "notconfigured"
      ],
      "metadata": {
        "description": "Based on this value a different nested template is deployed"
      }
    }
  },
  "variables": {
    "template": {
      "base": "https://raw.githubusercontent.com/marcvaneijk/foundation/master/200-nested/",
      "shared": "nested/sharedresources.json",
      "optional": "[concat('nested/optional_', parameters('optionalResource'),'.json')]",
      "membertype1": "nested/membertype1.json",
      "membertype2": "nested/membertype2.json"
    },
    "apiVersion": {
      "resources": { "deployments": "2015-01-01" },
      "storage": { "storageAccounts": "2015-01-01" }
    }
  },
  "resources": [
    {
      "name": "shared",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('template').base, variables('template').shared)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[variables('apiVersion').storage.storageAccounts]"
          }
        }
      }
    },
    {
      "name": "optional",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('template').base, variables('template').optional)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    },
    {
      "name": "membertype1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'optional')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('template').base, variables('template').membertype1)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    },
    {
      "name": "membertype2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'membertype1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('template').base, variables('template').membertype2)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "repositoryUri": {
      "value": "[uri(variables('template').base)]",
      "type": "string"
    }
  }
}
