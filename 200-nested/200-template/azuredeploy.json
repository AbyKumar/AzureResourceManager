{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "optionalResource": {
      "type": "string",
      "defaultValue": "configured",
      "allowedValues": [
        "configured",
        "notconfigured"
      ],
      "metadata": {
        "description": "Based on this value a different nested template is deployed"
      }
    }
  },
  "variables": {
    "template": {
      "base": "https://raw.githubusercontent.com/marcvaneijk/foundation/master/200-nested/",
      "nested1": "sharedresources.json",
      "nested2": "[concat('optional_', parameters('optionalResource'),'.json')]",
      "nested3": "membertype1.json",
      "nested4": "membertype2.json"
    },
    "apiVersion": {
      "resources": { "deployments": "2015-01-01" }
    }
  },
  "resources": [
    {
      "name": "[variables('template').nested1]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(concat(variables('template').base, 'nested/'), variables('template').nested1)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    },
    {
      "name": "[variables('template').nested2]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('template').nested1)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(concat(variables('template').base, 'nested/'), variables('template').nested2)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    },
    {
      "name": "[variables('template').nested3]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('template').nested2)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(concat(variables('template').base, 'nested/'), variables('template').nested3)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    },
    {
      "name": "[variables('template').nested4]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('apiVersion').resources.deployments]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('template').nested3)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(concat(variables('template').base, 'nested/'), variables('template').nested4)]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "optionalResource": {
            "value": "[parameters('optionalResource')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "repositoryUri": {
      "value": "[uri(variables('template').base)]",
      "type": "string"
    }
  }
}
